ARG BASEIMAGE=node:22-alpine

FROM ${BASEIMAGE} as builder
ENV ALARM_CHANNEL_CONFIG=1,2

WORKDIR /app

# Copy package files first for better layer caching
COPY package.json pnpm-lock.yaml ./
COPY packages/server/package.json packages/server/pnpm-lock.yaml ./packages/server/

# Install pnpm and dependencies
RUN npm install -g pnpm && \
    pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build the application
RUN pnpm run build

# Runtime stage
FROM ${BASEIMAGE}
WORKDIR /app

# Install pnpm globally
RUN npm install -g pnpm

# Copy built files from builder
COPY --from=builder /app/.keystone ./.keystone
COPY --from=builder /app/packages/server/package.json ./package.json

# Install production dependencies only
RUN pnpm install --prod --frozen-lockfile

EXPOSE 3000

CMD ["pnpm", "run", "start"]
